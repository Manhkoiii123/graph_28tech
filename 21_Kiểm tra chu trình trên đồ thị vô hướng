#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<int,int>
#define all(a) a.begin(),a.end()
#define ms(s,n) memset(s,n,sizeof(s))
const int MOD = (int)(1e9+7);
int n,m;
vector<int>ke[1005];
bool vis[1005];
int par[1005];
void nhap(){
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int x,y;
        cin>>x>>y;
        ke[x].push_back(y);
        ke[y].push_back(x);
    }
    ms(vis,false);
}
bool dfs(int u){
    vis[u]=true;
    for(int v:ke[u]){
        if(!vis[v]){
            par[v]=u;
            if(dfs(v)) return true;
        }
        else{
            if(v!=par[u]) return true;
        }
    }
    return false;
}
bool bfs(int u){
    queue<int>q;
    q.push(u);
    vis[u]=true;
    while(!q.empty()){
        int v=q.front();q.pop();
        for(int x:ke[v]){
            if(!vis[x]){
                vis[x]=true;
                q.push(x);
                par[x]=v;
            }
            else if(vis[x]==true&&x!=par[v]){
                return true;
            }
        }
    }
    return false;
}
int main(){
    nhap();
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            if(bfs(i)){
                cout<<"1"<<endl;
                system("pause");
                return 0;
            }
        }
    }
    cout<<"0"<<endl;
    system("pause");
}

----------------------------------------------------DSU-------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<int,int>
#define all(a) a.begin(),a.end()
#define ms(s,n) memset(s,n,sizeof(s))
const int MOD = (int)(1e9+7);
int n,m;
int par[1000005];
ll size[1000005];
void khoi_tao(){
    for(int i=1;i<=n;i++){
        par[i]=i;
        size[i]=1;
    }
}
int find(int a){
    if(a==par[a]) return a;
    else return par[a]=find(par[a]);
}
bool Union(int a,int b){
    a=find(a);
    b=find(b);
    if(a==b) return false;
    if(size[a]<size[b]) swap(a,b);
    size[a]+=size[b];
    par[b]=a;
    return true;
}
int main(){
    cin>>n>>m;
    khoi_tao();
    for(int i=0;i<m;i++){
        int x,y;
        cin>>x>>y;
        if(!Union(x,y)){
            cout<<"1"<<endl;
            return 0;
        }
    }
    cout<<"0"<<endl;
}
