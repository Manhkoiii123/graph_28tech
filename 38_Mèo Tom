#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<int,int>
#define all(a) a.begin(),a.end()
#define ms(s,n) memset(s,n,sizeof(s))
const int MOD = (int)(1e9+7);
int n,m;
vector<int>ke[1005];
int a[1005];
int degree[1005];
void nhap(){
    cin>>n>>m;
    for(int i=1;i<=n;i++){
        cin>>a[i];
    }
    for(int i=0;i<n-1;i++){
        int x,y;
        cin>>x>>y;
        ke[x].push_back(y);
        degree[x]++;
    }
}
bool vis[1005];

vector<int>path[1005];
int par[1005];

void dfs(int x){
    vis[x]=true;
    for(int v:ke[x]){
        if(!vis[v]){
            par[v]=x;
            dfs(v);
        }
    }
}
int main(){
    nhap();
    vector<int>v;
    for(int i=1;i<=n;i++){
        if(degree[i]==0){
           v.push_back(i);
        }
    }
    
    dfs(1);
    
    for(int i=0;i<v.size();i++){
        int x=v[i];
        while(x!=1){
            path[v[i]].push_back(x);
            x=par[x];
        }
        path[v[i]].push_back(1);
    }
    int ans=0;
    for(int i=0;i<v.size();i++){
       int cnt=0;
       int j=0;
       bool ok=true;
       while(j<path[v[i]].size()){
            if(a[path[v[i]][j]]==1){
                ++cnt;
                if(cnt>m){
                    ok=false;
                }
            }
            else{
                cnt=0;
            }
            ++j;
       }
       if(ok)++ans;
    }
    cout<<ans<<endl;
    system("pause");
}
